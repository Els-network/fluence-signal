import "@fluencelabs/aqua-lib/builtin.aqua"

export Id, Identity, SignResult, EncryptionResult, DecryptionResult, Signal

alias Buffer: []u8 
alias Id: string

data Identity:
    id: Id
    username: string
    identityKey: []u8
    preKeyId: ?u8
    preKeyPublic: []u8 
    registrationId: u8 
    signedPreKeyId: u8 
    signedPreKeyPublic: []u8 
    signedPreKeySignature: []u8 

data SignResult:
    success: bool
    error: ?string
    signature: ?[]u8

data EncryptionResult:
    success: bool
    error: ?string
    content: ?[]u8

data DecryptionResult:
    success: bool
    error: ?string
    content: ?[]u8

data RegisterResult:
    success: bool
    error: ?string

service Signal("signal"):
    set_username(username: string)
    get_username() -> string

    create(username: string) -> Identity 

    sign(data: Buffer) -> SignResult
    verify(signature: Buffer, data: Buffer) -> bool
    verify_for(signature: Buffer, data: Buffer, id: Id) -> bool
    
    get_identity() -> Identity
    register_identity(identity: Identity) -> RegisterResult

    encrypt(data: Buffer, to: Id) -> EncryptionResult

    decrypt(data: Buffer, from: string) -> DecryptionResult
