import "@fluencelabs/aqua-lib/builtin.aqua"

alias Buffer: []u8 

data Identity:
    id: string
    username: string
    deviceId: u8
    identityKey: []u8
    preKeyId: ?u8
    preKeyPublic: []u8 
    registrationId: u8 
    signedPreKeyId: u8 
    signedPreKeyPublic: []u8 
    signedPreKeySignature: []u8 
    address: string

data SignResult:
    success: bool
    error: ?string
    signature: ?[]u8

data EncryptionResult:
    success: bool
    error: ?string
    content: ?[]u8

data DecryptionResult:
    success: bool
    error: ?string
    content: ?[]u8

service Signal("signal"):
    set_username(username: string)
    get_username() -> string
    get_account_name() -> string

    create(username: string) -> Identity 

    sign(data: Buffer) -> SignResult
    verify(signature: Buffer, data: Buffer) -> bool

    get_identity() -> Identity

    encrypt(data: Buffer, id: string) -> EncryptionResult

    decrypt(data: Buffer, from: string) -> DecryptionResult
